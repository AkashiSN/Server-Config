map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

server{
    listen 443 ssl http2;
    server_name ${TV_SUBDOMAIN}.${DOMAIN};

    ssl_certificate     /etc/letsencrypt/live/${DOMAIN}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${DOMAIN}/privkey.pem;

    add_header X-Frame-Options          SAMEORIGIN;
    add_header X-Content-Type-Options   nosniff;
    add_header X-XSS-Protection         "1; mode=block";

    etag off;

    proxy_set_header Host               $host;
    proxy_set_header X-Real-IP          $remote_addr;
    proxy_set_header X-Forwarded-Host   $host;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto  https;
    proxy_set_header X-Original-URI     $request_uri;

    proxy_http_version  1.1;
    proxy_set_header    Upgrade     $http_upgrade;
    proxy_set_header    Connection  $connection_upgrade;

    proxy_buffers 16 16k;
    proxy_buffer_size 16k;

    # for checking login status.
    # only returns a 202 Accepted response or a 401 Unauthorized response;
    location = /oauth2/auth {
        internal;
        auth_request            off;
        proxy_pass              http://auth-proxy:80;
        proxy_pass_request_body off;
    }

    # to start oauth cycle
    location = /oauth2/start  {
        internal;
        auth_request            off;
        proxy_pass              http://auth-proxy:80;
        proxy_pass_request_body off;
    }

    # to complete oauth cycle
    location = /oauth2/callback {
        auth_request      off;
        proxy_pass        http://auth-proxy:80;
    }

    location / {
        # 認証済みかどうか確認
        auth_request /oauth2/auth;

        # ^で401がかえってきたら認証を開始
        error_page 401 = /oauth2/start;

        proxy_pass http://epgstation:8080/;
    }
}

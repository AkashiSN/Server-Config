apiVersion: v1
kind: ConfigMap
metadata:
  name: wordpress-conf
  namespace: wordpress
data:
  wordpress.ini: |
    memory_limit=1024M

    upload_max_filesize=512M
    post_max_size=512M

    request_terminate_timeout=3600
    max_execution_time=3600
    output_buffering=0

  zz-docker.conf: |
    [global]
    daemonize = no
    log_limit = 8192
    error_log = /proc/self/fd/2

    [www]
    user  = www-data
    group = www-data

    listen = 0.0.0.0:9000

    access.log = /proc/self/fd/2
    access.format = "%{REMOTE_ADDR}e - %u %t \"%m %{REQUEST_URI}e\" %s"

    pm                   = dynamic
    pm.max_children      = 17
    pm.start_servers     = 4
    pm.min_spare_servers = 4
    pm.max_spare_servers = 12
    pm.max_requests      = 1500

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: wordpress-hooks
  namespace: wordpress
data:
  hooks.sh: |
    #!/bin/sh
    set -eu

    su -p www-data -s /bin/sh << 'EOF'
      if ! wp core is-installed; then
        wp core install --url=${WORDPRESS_URL} --locale=ja --title=${WORDPRESS_TITLE} --admin_user=$(cat ${WORDPRESS_ADMIN_USER_FILE}) --admin_email=$(cat ${WORDPRESS_ADMIN_EMAIL_FILE}) --prompt=admin_password < ${WORDPRESS_ADMIN_PASSWORD_FILE}
        wp core language install ja --activate
        wp option update timezone_string $(wp eval "echo _x( '0', 'default GMT offset or timezone string' );")
        wp option update date_format $(wp eval "echo __( 'M jS Y' );")
      fi

      wp plugin install redis-cache --activate
      wp plugin install wordfence-login-security --activate
      wp plugin install insert-headers-and-footers --activate
      wp config set WP_REDIS_HOST wordpress-redis
      wp config set DISABLE_WP_CRON true
    EOF

    exec "$@"
---
# file: roles/cluster/tasks/main.yml
- name: Import kubeadm init task
  ansible.builtin.import_tasks:
    file: kubeadm.yml
  when: inventory_hostname != "k3s"

- name: Setup cluster
  when: inventory_hostname in groups["master"]
  become: false
  block:
    - name: Import helm.yml
      ansible.builtin.import_tasks:
        file: helm.yml

    - name: Import cilium.yml
      ansible.builtin.import_tasks:
        file: cilium.yml
      when: inventory_hostname != "k3s"

    - name: Import metallb.yml
      ansible.builtin.import_tasks:
        file: metallb.yml

    - name: Import ingress-nginx.yml
      ansible.builtin.import_tasks:
        file: ingress-nginx.yml

    - name: Import cert-manager.yml
      ansible.builtin.import_tasks:
        file: cert-manager.yml

    - name: Import metrics-server.yml
      ansible.builtin.import_tasks:
        file: metrics-server.yml
      when: inventory_hostname != "k3s"

    - name: Import oauth2-proxy.yml
      ansible.builtin.import_tasks:
        file: oauth2-proxy.yml

    - name: Import argo-cd.yml
      ansible.builtin.import_tasks:
        file: argo-cd.yml

    - name: Import kubernetes-replicator.yml
      ansible.builtin.import_tasks:
        file: kubernetes-replicator.yml

    - name: Import hashicorp-vault.yml
      ansible.builtin.import_tasks:
        file: hashicorp-vault.yml

    - name: Create the storage class
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('file', '../kubernetes/k8s/storage-class.yml') | from_yaml_all }}"
      become: false

- name: Wait for all pods to be ready
  ansible.builtin.command:
    cmd: kubectl get pods -A -o jsonpath='{.items[*].status.conditions[?(@.type=="Ready")].status}'
  register: result
  until: result.stdout.find("False") == -1
  retries: 60
  delay: 10
  when: inventory_hostname in groups["master"]
  changed_when: false
  become: false

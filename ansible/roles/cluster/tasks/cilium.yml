---
# file: roles/cluster/tasks/cilium.yml
- name: Add cilium Helm charts repository
  kubernetes.core.helm_repository:
    name: cilium
    repo_url: https://helm.cilium.io/
  become: false

- name: Check if cilium Helm chart is installed
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      helm list --all-namespaces --deployed --short | grep cilium
    executable: /bin/bash
  register: cilium_helm_chart_result
  changed_when: cilium_helm_chart_result.rc != 0
  ignore_errors: true
  become: false

- name: Deploy cilium chart using set values on target
  kubernetes.core.helm:
    release_name: cilium
    chart_ref: cilium/cilium
    chart_version: "1.17.*"
    release_namespace: kube-system
    update_repo_cache: true
    wait: true
    atomic: true
    release_values:
      ipam:
        mode: cluster-pool
        operator:
          clusterPoolIPv4PodCIDRList: ["10.244.0.0/16"]
          clusterPoolIPv4MaskSize: 2
      ipv4:
        enabled: true
      k8sServiceHost: "{{ node_ip.stdout }}"
      k8sServicePort: 6443
  register: cilium_helm_chart_install
  when: cilium_helm_chart_result.rc != 0
  become: false

- name: Restart cilium
  ansible.builtin.command:
    cmd: "kubectl -n kube-system rollout restart {{ item.target }}"
  loop:
    - target: deploy cilium-operator
    - target: daemonset cilium
  register: result
  when: cilium_helm_chart_install is not skipped
  changed_when: result is not skipped
  become: false

- name: Wait for all pods to be ready
  ansible.builtin.command:
    cmd: kubectl get pods -n kube-system -o jsonpath='{.items[*].status.conditions[?(@.type=="Ready")].status}'
  register: result
  until: result.stdout.find("False") == -1
  retries: 60
  delay: 10
  changed_when: false
  become: false

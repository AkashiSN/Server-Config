apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-tekton
  namespace: tekton-pipelines
  annotations:
    nginx.org/websocket-services: tekton-dashboard
    nginx.org/location-snippets: |
      auth_request /oauth2/auth;
      error_page 401 = /oauth2/start?rd=https://{{ tekton_host }}/$request_uri;
    nginx.org/server-snippets: |
      location /oauth2/ {
        proxy_pass       http://oauth2-proxy.oauth2-proxy.svc.cluster.local;
        proxy_set_header Host                    $host;
        proxy_set_header X-Real-IP               $remote_addr;
        proxy_set_header X-Scheme                $scheme;
        proxy_set_header X-Auth-Request-Redirect $request_uri;
      }
      location ~ ^/oauth2/(?:auth|start)$ {
        proxy_pass       http://oauth2-proxy.oauth2-proxy.svc.cluster.local;
        proxy_set_header Host             $host;
        proxy_set_header X-Real-IP        $remote_addr;
        proxy_set_header X-Scheme         $scheme;
        # nginx auth_request includes headers but not body
        proxy_set_header Content-Length   "";
        proxy_pass_request_body           off;
      }
    cert-manager.io/cluster-issuer: letsencrypt-cluster-issuer
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - "{{ tekton_host }}"
      secretName: letsencrypt-cert
  rules:
    - host: "{{ tekton_host }}"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: tekton-dashboard
                port:
                  number: 9097
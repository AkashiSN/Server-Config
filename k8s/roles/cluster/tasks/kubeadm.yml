---
# file: roles/cluster/tasks/kubeadm.yml
- name: Copy kubeadm-config.yml.j2 configuration template
  ansible.builtin.template:
    src: kubeadm-config.yml.j2
    dest: /root/kubeadm-config.yml
    mode: "0644"
  when: inventory_hostname == "master-node"
  become: true

- name: Check if Kubernetes is already initialized
  ansible.builtin.stat:
    path: /etc/kubernetes/admin.conf
  register: kubernetes_initialized
  changed_when: false
  when: inventory_hostname == "master-node"
  become: true

- name: Run kubeadm init
  ansible.builtin.command:
    cmd: kubeadm init --skip-phases=addon/kube-proxy --config=/root/kubeadm-config.yml
  register: kubeadm_init_result
  when:
    - inventory_hostname == "master-node"
    - not kubernetes_initialized.stat.exists
  changed_when: kubeadm_init_result is not skipped
  become: true

- name: Get kubeadm join command
  ansible.builtin.command:
    cmd: kubeadm token create --print-join-command
  register: join_command
  when:
    - inventory_hostname == "master-node"
    - kubeadm_init_result is changed
  changed_when: join_command is not skipped
  become: true

- name: Join the cluster
  ansible.builtin.command:
    cmd: "{{ hostvars['master-node'].join_command.stdout }} --ignore-preflight-errors=all"
  register: join_result
  when:
    - inventory_hostname in groups["worker"]
    - hostvars['master-node'].kubeadm_init_result is changed
  changed_when: join_result is not skipped
  become: true

- name: Create .kube directory in the user's home
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.kube"
    state: directory
    mode: "0700"
  when: inventory_hostname == "master-node"
  become: false

- name: Copy admin.conf to user's tmp directory
  ansible.builtin.copy:
    src: /etc/kubernetes/admin.conf
    dest: "/tmp/config"
    owner: "{{ ansible_env.USER }}"
    group: "{{ ansible_env.USER }}"
    mode: "0644"
    remote_src: true
  when: inventory_hostname == "master-node"
  become: true

- name: Copy tmp to user's .kube directory
  ansible.builtin.copy:
    src: /tmp/config
    dest: "{{ ansible_env.HOME }}/.kube/config"
    owner: "{{ ansible_env.USER }}"
    group: "{{ ansible_env.USER }}"
    mode: "0600"
    remote_src: true
  when: inventory_hostname == "master-node"
  become: false

- name: Remove tmp files
  ansible.builtin.file:
    path: /tmp/config
    state: absent
  when: inventory_hostname == "master-node"
  become: true

- name: Approve pending certificates
  when: inventory_hostname == "master-node"
  become: false
  block:
    - name: Get pending CSR names
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          kubectl get csr | grep Pending | awk '{print $1}'
        executable: /bin/bash
      changed_when: false
      register: pending_csr_result

    - name: Approve each pending CSR
      ansible.builtin.command:
        cmd: kubectl certificate approve {{ item }}
      with_items: "{{ pending_csr_result.stdout_lines }}"
      changed_when: pending_csr_result.stdout != ""

- name: Fetch kube config to local
  ansible.builtin.fetch:
    src: "{{ ansible_env.HOME }}/.kube/config"
    dest: "{{ lookup('ansible.builtin.env', 'HOME') }}/.kube/config"
    flat: true
  when: inventory_hostname == "master-node"
  become: false

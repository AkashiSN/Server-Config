---
# file: roles/cluster/tasks/nginx-ingress.yml
- name: Add nginx-stable Helm charts repository
  kubernetes.core.helm_repository:
    name: nginx-stable
    repo_url: https://helm.nginx.com/stable
  become: false

- name: Check if nginx-ingress Helm chart is installed
  shell: helm list --all-namespaces --deployed --short | grep nginx-ingress
  register: nginx_ingress_helm_chart_result
  changed_when: nginx_ingress_helm_chart_result.rc != 0
  ignore_errors: yes
  become: false

- name: concat cloudflare_ips strings
  set_fact:
    real_ip_from: "{{ cloudflare_ips | join(', ') }}, {{ local_ips | join(',') }}"
  become: false

- name: Deploy nginx-ingress chart using set values on target
  kubernetes.core.helm:
    release_name: nginx-ingress
    chart_ref: nginx-stable/nginx-ingress
    release_namespace: nginx-ingress
    create_namespace: true
    update_repo_cache: true
    wait: true
    atomic: true
    release_values:
      controller:
        enableSnippets: true
        service:
          type: LoadBalancer
          externalTrafficPolicy: Local
          annotations:
            metallb.universe.tf/loadBalancerIPs: "{{ nginx_ingress_lb_v4_addr }},{{ ipv6_prefix.stdout }}:{{ nginx_ingress_lb_v6_host_addr }}"
          ipFamilyPolicy: RequireDualStack
        config:
          entries:
            redirect-to-https: "True"
            proxy-connect-timeout: 3600s
            proxy-send-timeout: 3600s
            proxy-read-timeout: 3600s
            client-max-body-size: "0"
            proxy-buffering: "True"
            proxy-buffer-size: "64k"
            proxy-buffers: "100 64k"
            set-real-ip-from: "{{ real_ip_from }}"
            real-ip-recursive: "True"
            real-ip-header: "X-Forwarded-For"
            log-format: |
              time=$time_iso8601
              server_name=$server_name
              remote_addr=$remote_addr
              remote_port=$realip_remote_port
              country=$http_cf_ipcountry
              method=$request_method
              uri="$request_uri"
              proto=$server_protocol
              status=$status
              body_sent=$body_bytes_sent
              referer="$http_referer"
              forwarded_for=$http_x_forwarded_for
              request_time=$request_time
              user_agent="$http_user_agent"
  register: nginx_ingress_helm_chart_install
  when: nginx_ingress_helm_chart_result.rc != 0
  become: false

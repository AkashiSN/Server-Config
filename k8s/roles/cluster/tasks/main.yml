---
# file: roles/cluster/tasks/main.yml

- name: Import kubeadm init task
  ansible.builtin.import_tasks:
    file: kubeadm.yml
  when: inventory_hostname != "microk8s"

- name: Setup cluster
  when: inventory_hostname in groups["master"]
  become: false
  block:
    - name: Create the 'monitoring' namespace
      kubernetes.core.k8s:
        state: present
        api_version: v1
        name: monitoring
        kind: Namespace
      when: inventory_hostname != "microk8s"

    - name: Import helm.yml
      ansible.builtin.import_tasks:
        file: helm.yml

    - name: Import cilium.yml
      ansible.builtin.import_tasks:
        file: cilium.yml
      when: inventory_hostname != "microk8s"

    - name: Import metallb.yml
      ansible.builtin.import_tasks:
        file: metallb.yml

    - name: Import nginx-ingress.yml
      ansible.builtin.import_tasks:
        file: nginx-ingress.yml

    - name: Import cert-manager.yml
      ansible.builtin.import_tasks:
        file: cert-manager.yml

    - name: Import metrics-server.yml
      ansible.builtin.import_tasks:
        file: metrics-server.yml
      when: inventory_hostname != "microk8s"

    - name: Create the 'auth' namespace
      kubernetes.core.k8s:
        state: present
        api_version: v1
        name: auth
        kind: Namespace

    - name: Apply the auth ingress config
      kubernetes.core.k8s:
        state: present
        template: auth-ingress.yml.j2
      become: false

    - name: Import dex.yml
      ansible.builtin.import_tasks:
        file: dex.yml

    - name: Import oauth2-proxy.yml
      ansible.builtin.import_tasks:
        file: oauth2-proxy.yml

    # - name: Import tekton.yml
    #   ansible.builtin.import_tasks:
    #     file: tekton.yml

    - name: Import argo-cd.yml
      ansible.builtin.import_tasks:
        file: argo-cd.yml

    - name: Import kubernetes-replicator.yml
      ansible.builtin.import_tasks:
        file: kubernetes-replicator.yml

    - name: Import hashicorp-vault.yml
      ansible.builtin.import_tasks:
        file: hashicorp-vault.yml

    # - name: Import democratic-csi.yml
    #   ansible.builtin.import_tasks:
    #     file: democratic-csi.yml
    #   when: inventory_hostname != "microk8s"

    # - name: Import monitoring.yml
    #   ansible.builtin.import_tasks:
    #     file: monitoring.yml
    #   when: inventory_hostname != "microk8s"

- name: Wait for all pods to be ready
  ansible.builtin.command:
    cmd: kubectl get pods -A -o jsonpath='{.items[*].status.conditions[?(@.type=="Ready")].status}'
  register: result
  until: result.stdout.find("False") == -1
  retries: 60
  delay: 10
  when: inventory_hostname in groups["master"]
  changed_when: false
  become: false

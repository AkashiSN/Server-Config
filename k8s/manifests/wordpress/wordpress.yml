apiVersion: v1
kind: ConfigMap
metadata:
  name: wordpress-env
  namespace: wordpress
data:
  TZ: "Asia/Tokyo"
  HTTP_X_FORWARDED_PROTO: https,http
  WORDPRESS_URL: "{{ wordpress_host }}"
  WORDPRESS_TITLE: "akashisnの日記"
  WORDPRESS_DB_HOST: wordpress-mariadb:3306
  WORDPRESS_DB_USER: wordpress
  WORDPRESS_DB_NAME: wordpress
  WORDPRESS_TABLE_PREFIX: wp_
  WORDPRESS_DB_PASSWORD_FILE: /secrets/wordpress_mariadb_user_password
  WORDPRESS_ADMIN_USER_FILE: /secrets/wordpress_admin_user
  WORDPRESS_ADMIN_EMAIL_FILE: /secrets/wordpress_admin_email
  WORDPRESS_ADMIN_PASSWORD_FILE: /secrets/wordpress_admin_password
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: wordpress
  name: wordpress
  namespace: wordpress
spec:
  replicas: 1
  serviceName: wordpress
  selector:
    matchLabels:
      app: wordpress
  template:
    metadata:
      labels:
        app: wordpress
    spec:
      securityContext:
        fsGroup: 33
        fsGroupChangePolicy: OnRootMismatch
      containers:
        - name: wordpress
          image: ghcr.io/akashisn/wordpress@sha256:e370d1cda72c61ac035abb761679596a7d10fc916fd76d0b8b77bfe96ed1bbd1
          imagePullPolicy: IfNotPresent
          args:
            - /docker-entrypoint-hooks.sh
            - php-fpm
          envFrom:
            - configMapRef:
                name: wordpress-env
          volumeMounts:
            - name: app
              mountPath: /var/www/html
            - name: wordpress-secrets
              mountPath: /secrets
            - name: wordpress-conf
              mountPath: /usr/local/etc/php-fpm.d/zz-docker.conf
              subPath: zz-docker.conf
              readOnly: true
            - name: wordpress-conf
              mountPath: /usr/local/etc/php/conf.d/wordpress.ini
              subPath: wordpress.ini
              readOnly: true
            - name: wordpress-hooks
              mountPath: /docker-entrypoint-hooks.sh
              subPath: hooks.sh
              readOnly: true
          resources:
            requests:
              cpu: 300m
              memory: 200Mi
            limits:
              cpu: 1000m
              memory: 2000Mi
        - name: nginx
          image: nginx:1.25.2
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
              name: nginx-wordpress
          volumeMounts:
            - name: app
              mountPath: /var/www/html
            - name: nginx-conf
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
              readOnly: true
            - name: nginx-conf
              mountPath: /etc/nginx/conf.d/wordpress.conf
              subPath: wordpress.conf
              readOnly: true
          resources:
            requests:
              cpu: 100m
              memory: 1000Mi
            limits:
              cpu: 300m
              memory: 2000Mi
      volumes:
        - name: wordpress-secrets
          secret:
            secretName: wordpress-secrets
        - name: wordpress-conf
          configMap:
            name: wordpress-conf
        - name: wordpress-hooks
          configMap:
            defaultMode: 504
            name: wordpress-hooks
        - name: nginx-conf
          configMap:
            name: nginx-conf
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Delete
  volumeClaimTemplates:
    - metadata:
        name: app
      spec:
        accessModes:
          - ReadWriteOncePod
        storageClassName: iscsi-ssd-storage
        resources:
          requests:
            storage: 30Gi
---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: wordpress
  name: wordpress
  namespace: wordpress
spec:
  ports:
    - name: nginx-wordpress
      port: 80
      targetPort: nginx-wordpress
  selector:
    app: wordpress
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-wordpress
  namespace: wordpress
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-cluster-issuer
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - "{{ wordpress_host }}"
      secretName: letsencrypt-cert
  rules:
    - host: "{{ wordpress_host }}"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: wordpress
                port:
                  name: nginx-wordpress
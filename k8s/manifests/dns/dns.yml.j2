apiVersion: v1
kind: ConfigMap
metadata:
  name: dnsmasq-conf
  namespace: dns
data:
  dnsmasq.conf: |
    port=10053
    cache-size=0
    no-resolv
    server=1.0.0.1
    server=1.1.1.1
    strict-order
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: dnsdist-conf
  namespace: dns
data:
  dnsdist.conf: |
    setACL("0.0.0.0/0")
    addACL("::/0")
    newServer("127.0.0.1:10053")
    addLocal("0.0.0.0:53")
    addLocal("[::]:53")
    addDOHLocal("0.0.0.0:443", "/certs/tls.crt", "/certs/tls.key", "/")
    addDOHLocal("[::]:443", "/certs/tls.crt", "/certs/tls.key", "/")
    addTLSLocal("0.0.0.0:853", "/certs/tls.crt", "/certs/tls.key")
    addTLSLocal("[::]:853", "/certs/tls.crt", "/certs/tls.key")
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dns-server
  namespace: dns
spec:
  selector:
    matchLabels:
      app: dns-server
  replicas: 4
  template:
    metadata:
      labels:
        app: dns-server
    spec:
      containers:
        - name: dnsmasq
          image: ghcr.io/akashisn/dnsmasq@sha256:e1125fba16d30716c9d0baf4dc3b01b67130e48541fc7caa11ed31818d5783b7
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: dnsmasq-conf
              mountPath: /etc/dnsmasq.d/dnsmasq.conf
              subPath: dnsmasq.conf
              readOnly: true
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
            limits:
              cpu: 200m
              memory: 200Mi
        - name: dnsdist
          image: ghcr.io/akashisn/dnsdist@sha256:3ae0e1f42c2eccfaaa236e494f9891a63bd0767193c4e1f38943dead35f587fc
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 53
              protocol: UDP
              name: dnsdist
            - containerPort: 443
              protocol: TCP
              name: dnsdist-doh
            - containerPort: 853
              protocol: TCP
              name: dnsdist-dot
          volumeMounts:
            - name: dnsdist-conf
              mountPath: /etc/dnsdist.conf
              subPath: dnsdist.conf
              readOnly: true
            - name: certs
              mountPath: /certs
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
            limits:
              cpu: 200m
              memory: 200Mi
      volumes:
        - name: certs
          secret:
            secretName: dns-cert
        - name: dnsmasq-conf
          configMap:
            name: dnsmasq-conf
        - name: dnsdist-conf
          configMap:
            name: dnsdist-conf
---
apiVersion: v1
kind: Service
metadata:
  annotations:
{% if default_interface_v6.stdout != "" %}
    metallb.universe.tf/loadBalancerIPs: "{{ dns_lb_v4_addr }},{{ ipv6_prefix.stdout }}:{{ dns_lb_v6_host_addr }}"
  ipFamilies:
    - IPv4
    - IPv6
  ipFamilyPolicy: RequireDualStack
{% else %}
    metallb.universe.tf/loadBalancerIPs: "{{ dns_lb_v4_addr }}"
{% endif %}
  labels:
    service: dns-server
  name: dns-server
  namespace: dns
spec:
  type: LoadBalancer
  externalTrafficPolicy: Local
  ports:
    - port: 53
      protocol: UDP
      name: dnsdist
    - port: 443
      protocol: TCP
      name: dnsdist-doh
    - port: 853
      protocol: TCP
      name: dnsdist-dot
  selector:
    app: dns-server
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: dns-cert
  namespace: dns
spec:
  secretName: dns-cert
  dnsNames:
    - "{{ dns_host }}"
  issuerRef:
    name: letsencrypt-cluster-issuer
    kind: ClusterIssuer
    group: cert-manager.io
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-dns-server
  annotations:
    nginx.org/ssl-services: dns-server
  namespace: dns
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - "{{ dns_host }}"
      secretName: dns-cert
  rules:
    - host: "{{ dns_host }}"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: dns-server
                port:
                  name: dnsdist-doh
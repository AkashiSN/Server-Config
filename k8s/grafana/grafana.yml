apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: grafana
  name: grafana
  namespace: grafana
spec:
  replicas: 1
  serviceName: grafana
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      securityContext:
        fsGroup: 472
        supplementalGroups:
          - 0
      containers:
        - name: grafana
          image: grafana/grafana:9.1.7
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
              name: http-grafana
          env:
            - name: GF_SECURITY_ADMIN_PASSWORD__FILE
              value: /secrets/grafana_admin_password
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /robots.txt
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 2
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 3000
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 250m
              memory: 750Mi
            limits:
              cpu: 1000m
              memory: 2Gi
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: data
            - name: grafana-secrets
              mountPath: /secrets
      volumes:
        - name: grafana-secrets
          secret:
            secretName: grafana-secrets
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: iscsi-ssd-storage
        resources:
          requests:
            storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: grafana
  name: grafana
  namespace: grafana
spec:
  ports:
    - name: grafana
      port: 3000
      targetPort: http-grafana
  selector:
    app: grafana
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-nextcloud
  namespace: grafana
  annotations:
    nginx.org/redirect-to-https: "True"
    nginx.org/client-max-body-size: "0"
    nginx.org/proxy-request-buffering: "off"
    cert-manager.io/cluster-issuer: letsencrypt-issuer
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - grafana.akashisn.info
      secretName: letsencrypt-cert
  rules:
    - host: grafana.akashisn.info
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: grafana
                port:
                  name: grafana

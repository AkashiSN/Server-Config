version: "3.8"

services:
  #
  # TV
  #
  mirakurun:
    # build:
    #   context: mirakurun
    image: chinachu/mirakurun
    cap_add:
      - SYS_ADMIN
      - SYS_NICE
    environment:
      TZ: Asia/Tokyo
      LOG_LEVEL: "3"
    devices:
      - /dev/bus:/dev/bus
      - /dev/dvb:/dev/dvb
    volumes:
      - ./mirakurun/run/:/var/run/
      - ./mirakurun/opt/:/opt/
      - ./mirakurun/config/:/app-config/
      - ./mirakurun/data/:/app-data/
    restart: always
    logging:
      driver: json-file
      options:
        max-file: "1"
        max-size: 10m

  mariadb_epgstation:
    image: mariadb:10.5
    volumes:
      - mariadb_epgstation:/var/lib/mysql
    environment:
      TZ: "Asia/Tokyo"
      MYSQL_USER: ${MYSQL_EPGSTATION_USER}
      MYSQL_PASSWORD: ${MYSQL_EPGSTATION_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_EPGSTATION_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_EPGSTATION_DATABASE}
    command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci --performance-schema=false --expire_logs_days=1
    restart: always
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  epgstation:
    build:
      context: epgstation
    runtime: nvidia
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./epgstation/config:/app/config
      - ./epgstation/data:/app/data
      - ./epgstation/thumbnail:/app/thumbnail
      - ./epgstation/logs:/app/logs
      - ${RECODED_PATH}:/app/recorded
    environment:
      TZ: "Asia/Tokyo"
      MYSQL_USER: ${MYSQL_EPGSTATION_USER}
      MYSQL_PASSWORD: ${MYSQL_EPGSTATION_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_EPGSTATION_DATABASE}
    depends_on:
      - mirakurun
      - mariadb_epgstation
    command: >
      /usr/bin/sudo -E -u www-data /bin/sh -c
      "envsubst \
        '$$MYSQL_USER $$MYSQL_PASSWORD $$MYSQL_DATABASE' \
        < /app/config/config.yml.template \
        > /app/config/config.yml \
      && HOME=/app npm start"
    restart: always

  auth-proxy:
    build:
      context: auth-proxy
    environment:
      TZ: "Asia/Tokyo"
      SLACK_CLIENT_ID: ${SLACK_CLIENT_ID}
      SLACK_CLIENT_SECRET: ${SLACK_CLIENT_SECRET}
    restart: always

  #
  # Nextcloud
  #

  mariadb_nextcloud:
    image: mariadb:10.5
    volumes:
      - mariadb_nextcloud:/var/lib/mysql
    environment:
      TZ: "Asia/Tokyo"
      MYSQL_USER: ${MYSQL_NEXTCLOUD_USER}
      MYSQL_PASSWORD: ${MYSQL_NEXTCLOUD_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_NEXTCLOUD_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_NEXTCLOUD_DATABASE}
    command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci --performance-schema=false --expire_logs_days=1
    restart: always
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  redis_nextcloud:
    image: redis:alpine
    volumes:
      - redis_nextcloud:/data
    environment:
      TZ: "Asia/Tokyo"
    command: redis-server --requirepass ${REDIS_HOST_PASSWORD}
    restart: always

  nextcloud:
    build:
      context: nextcloud
    volumes:
      - nextcloud:/var/www/html
      - ${NAS_PATH}:/mnt/nas
    environment:
      TZ: "Asia/Tokyo"
      MYSQL_USER: ${MYSQL_NEXTCLOUD_USER}
      MYSQL_PASSWORD: ${MYSQL_NEXTCLOUD_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_NEXTCLOUD_DATABASE}
      MYSQL_HOST: mariadb_nextcloud
      REDIS_HOST: redis_nextcloud
      REDIS_HOST_PASSWORD: ${REDIS_HOST_PASSWORD}
      NEXTCLOUD_ADMIN_USER: ${NEXTCLOUD_ADMIN_USER}
      NEXTCLOUD_ADMIN_PASSWORD: ${NEXTCLOUD_ADMIN_PASSWORD}
      NEXTCLOUD_TRUSTED_DOMAINS: ${FILES_SUBDOMAIN}.${DOMAIN}
      NEXTCLOUD_DATA_DIR: /mnt/nas/nextcloud
      OVERWRITEPROTOCOL: https
      TRUSTED_PROXIES: nginx
    depends_on:
      - mariadb_nextcloud
      - redis_nextcloud
    restart: always

  #
  # Nginx
  #

  nginx:
    build:
      context: nginx
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - nextcloud:/var/www/html
      - log_volume:/var/log/nginx
      - ./nginx/conf.d:/etc/nginx/conf.d
    environment:
      TZ: "Asia/Tokyo"
      TV_SUBDOMAIN: ${TV_SUBDOMAIN}
      FILES_SUBDOMAIN: ${FILES_SUBDOMAIN}
      DOMAIN: ${DOMAIN}
    depends_on:
      - epgstation
      - auth-proxy
      - nextcloud
    expose:
      - "443"
    command: >
      /bin/sh -c
        "envsubst \
          '$$TV_SUBDOMAIN $$DOMAIN' \
          < /etc/nginx/conf.d/tv.conf.template \
          > /etc/nginx/conf.d/tv.conf \
        && envsubst \
          '$$FILES_SUBDOMAIN $$DOMAIN' \
          < /etc/nginx/conf.d/files.conf.template \
          > /etc/nginx/conf.d/files.conf \
        && envsubst \
          '$$DOMAIN' \
          < /etc/nginx/conf.d/nginx.conf.template \
          > /etc/nginx/nginx.conf \
        && nginx -g 'daemon off;'"
    restart: always

  #
  # VPN
  #

  openvpn_udp:
    build:
      context: openvpn
    cap_add:
      - NET_ADMIN
    volumes:
      - ./openvpn:/opt/openvpn
    environment:
      TZ: "Asia/Tokyo"
    ports:
      - "1194:1194/udp"
    command: udp
    restart: always

  openvpn_tcp:
    build:
      context: openvpn
    cap_add:
      - NET_ADMIN
    volumes:
      - ./openvpn:/opt/openvpn
    environment:
      TZ: "Asia/Tokyo"
    expose:
      - "1194"
    command: tcp
    restart: always

  #
  # Proxy server
  #

  # sslh:
  #   build:
  #     context: sslh
  #   cap_add:
  #     - NET_ADMIN
  #   environment:
  #     TZ: "Asia/Tokyo"
  #   depends_on:
  #     - nginx
  #     - openvpn_tcp
  #   ports:
  #     - "443:443"
  #   restart: always

  haproxy:
    build:
      context: haproxy
    environment:
      TZ: "Asia/Tokyo"
    depends_on:
      - nginx
      - openvpn_tcp
    cap_add:
      - NET_ADMIN
    volumes:
      - ./haproxy:/usr/local/etc/haproxy
    ports:
      - "443:443"
    restart: always

  #
  # Logging tools
  #

  grafana:
    image: grafana/grafana
    environment:
      GF_EXPLORE_ENABLED: "true"
    ports:
    # expose:
      - "3000:3000"
    networks:
      - grafana

  loki:
    image: grafana/loki
    expose:
      - "3100"
    networks:
      - grafana

  promtail:
    image: grafana/promtail
    volumes:
      - log_volume:/var/log/nginx
      - ./promtail:/etc/promtail
    depends_on:
      - nginx
    ports:
      - "9080:9080"
    networks:
      - grafana

networks:
  grafana:

volumes:
  mariadb_epgstation:
    driver: local
  mariadb_nextcloud:
    driver: local
  redis_nextcloud:
    driver: local
  nextcloud:
    driver: local
  log_volume:
    driver: local

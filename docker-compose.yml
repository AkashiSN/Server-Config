version: "3.8"

services:
  #
  # TV
  #

  mirakurun:
    image: ghcr.io/akashisn/dvb-docker/mirakurun
    cap_add:
      - SYS_ADMIN
      - SYS_NICE
    devices:
      - /dev/bus:/dev/bus
      - /dev/dvb:/dev/dvb
    volumes:
      - ./mirakurun/config/:/app-config/
      - ./mirakurun/data/:/app-data/
    environment:
      TZ: Asia/Tokyo
      LOG_LEVEL: "3"
    expose:
      - "40772"
    networks:
      internal:
    restart: always

  mariadb_epgstation:
    image: mariadb:10.8
    volumes:
      - mariadb_epgstation:/var/lib/mysql
    environment:
      TZ: "Asia/Tokyo"
      MYSQL_USER: epgstation
      MYSQL_PASSWORD: ${MYSQL_EPGSTATION_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_EPGSTATION_ROOT_PASSWORD}
      MYSQL_DATABASE: epgstation
    expose:
      - "3306"
    networks:
      internal:
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --performance-schema=false --expire_logs_days=1
    restart: always

  epgstation:
    image: ghcr.io/akashisn/dvb-docker/epgstation:5.0-qsv
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./epgstation/config:/app/config
      - ./epgstation/thumbnail:/app/thumbnail
      - /media/recorded:/app/recorded
      - log_volume:/var/promtail
    devices:
      - /dev/dri:/dev/dri
    environment:
      TZ: "Asia/Tokyo"
      HOME: /app
      DOMAIN: ${DOMAIN}
      MYSQL_PASSWORD: ${MYSQL_EPGSTATION_PASSWORD}
    expose:
      - "8888"
    networks:
      internal:
    depends_on:
      - mirakurun
      - mariadb_epgstation
    command: >
      /bin/sh -c
        "mkdir -p /var/promtail/epgstation
        rm -rf /app/logs
        ln -snf /var/promtail/epgstation /app/logs
        envsubst '$$MYSQL_PASSWORD $$DOMAIN' < /app/config/config.yml.template > /app/config/config.yml
        npm start"
    restart: always

  #
  # Minecraft
  #

  mc:
    image: itzg/minecraft-server
    volumes:
      - mc:/data
    environment:
      TZ: "Asia/Tokyo"
      EULA: TRUE
      MEMORY: 4G
      OVERRIDE_SERVER_PROPERTIES: TRUE
      ENABLE_WHITELIST: TRUE
      ENFORCE_WHITELIST: TRUE
      OVERRIDE_WHITELIST: TRUE
      WHITELIST: ${MC_WHITELIST}
      STOP_SERVER_ANNOUNCE_DELAY: 20
    ports:
      - 25565:25565
    restart: always

  #
  # MinIO
  #

  minio:
    image: quay.io/minio/minio
    volumes:
      - /mnt:/data
    environment:
      TZ: "Asia/Tokyo"
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_BROWSER_REDIRECT_URL: https://console.s3.${DOMAIN}
      MINIO_SERVER_URL: https://s3.${DOMAIN}
    ulimits:
      nofile:
        soft: 1048576
        hard: 1048576
    expose:
      - "9000"
      - "9001"
    networks:
      internal:
    command: server /data/xfs{1...4} --console-address :9001
    restart: always

  #
  # Nextcloud
  #

  postgres_nextcloud:
    image: postgres:alpine
    volumes:
      - postgres_nextcloud:/var/lib/postgresql/data
    environment:
        TZ: "Asia/Tokyo"
        POSTGRES_PASSWORD: ${POSTGRES_NEXTCLOUD_PASSWORD}
        POSTGRES_DB: nextcloud
        POSTGRES_USER: nextcloud
    expose:
      - "5432"
    networks:
      internal:
    restart: always

  redis_nextcloud:
    image: redis:alpine
    volumes:
      - redis_nextcloud:/data
    environment:
      TZ: "Asia/Tokyo"
    expose:
      - "6379"
    networks:
      internal:
    command: redis-server --requirepass ${REDIS_HOST_PASSWORD}
    restart: always

  nextcloud:
    image: ghcr.io/akashisn/nextcloud
    volumes:
      - nextcloud:/var/www/html
      - log_volume:/var/promtail
    environment:
      TZ: "Asia/Tokyo"
      NEXTCLOUD_ADMIN_USER: ${NEXTCLOUD_ADMIN_USER}
      NEXTCLOUD_ADMIN_PASSWORD: ${NEXTCLOUD_ADMIN_PASSWORD}
      NEXTCLOUD_TRUSTED_DOMAINS: "files.${DOMAIN} files-local.${DOMAIN}"
      OVERWRITEPROTOCOL: https
      TRUSTED_PROXIES: nginx
      POSTGRES_HOST: postgres_nextcloud
      POSTGRES_DB: nextcloud
      POSTGRES_USER: nextcloud
      POSTGRES_PASSWORD: ${POSTGRES_NEXTCLOUD_PASSWORD}
      REDIS_HOST: redis_nextcloud
      REDIS_HOST_PASSWORD: ${REDIS_HOST_PASSWORD}
      SMTP_HOST: smtp.gmail.com
      SMTP_PORT: 587
      SMTP_SECURE: tls
      SMTP_NAME: ${NEXTCLOUD_SMTP_USER}
      MAIL_FROM_ADDRESS: no-reply
      MAIL_DOMAIN: files.${DOMAIN}
      SMTP_PASSWORD: ${NEXTCLOUD_SMTP_PASSWORD}
    expose:
      - "9000"
    networks:
      internal:
    depends_on:
      - postgres_nextcloud
      - redis_nextcloud
      - minio
    command: >
      /bin/sh -c
        "mkdir -p /var/promtail/nextcloud
        /usr/bin/supervisord -c /etc/supervisord.conf"
    restart: always

  #
  # Nginx
  #

  nginx:
    image: ghcr.io/akashisn/nginx
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - ./nginx/conf.d:/run/nginx
      - nextcloud:/var/www/html
      - log_volume:/var/promtail
    environment:
      TZ: "Asia/Tokyo"
      DOMAIN: ${DOMAIN}
    expose:
      - "443"
    ports:
      - "443:443"
    networks:
      internal:
      ipv6net:
        ipv6_address: ${DOCKER_IPV6_SUBNET}::3
    depends_on:
      - epgstation
      - minio
      - nextcloud
    command: >
      /bin/sh -c
        "mkdir -p /var/promtail/nginx
        rm -rf /etc/nginx/conf.d/*
        envsubst '$$DOMAIN' < /run/nginx/nginx.conf.template > /etc/nginx/nginx.conf
        envsubst '$$DOMAIN' < /run/nginx/tv.conf.template > /etc/nginx/conf.d/tv.conf
        envsubst '$$DOMAIN' < /run/nginx/files.conf.template > /etc/nginx/conf.d/files.conf
        envsubst '$$DOMAIN' < /run/nginx/minio.conf.template > /etc/nginx/conf.d/minio.conf
        envsubst '$$DOMAIN' < /run/nginx/minio-console.conf.template > /etc/nginx/conf.d/minio-console.conf
        /usr/bin/supervisord -c /etc/supervisord.conf"
    restart: always

  #
  # DNS
  #

  dnsmasq:
    image: ghcr.io/akashisn/dnsmasq
    expose:
      - "53"
    ports:
      - "${LOCAL_IP}:53:53/udp"
    restart: always

  #
  # Logging tools
  #

  # promtail:
  #   image: grafana/promtail
  #   volumes:
  #     - log_volume:/var/promtail
  #     - ./promtail:/etc/promtail
  #   command: >
  #     -config.file=/etc/promtail/config.yml
  #     -print-config-stderr
  #   depends_on:
  #     - nginx
  #   ports:
  #     - "9080:9080"
  #   restart: always

volumes:
  mariadb_epgstation:
    driver: local
  mc:
    driver: local
  postgres_nextcloud:
    driver: local
  redis_nextcloud:
    driver: local
  nextcloud:
    driver: local
  log_volume:
    driver: local

networks:
  internal:
    name: internal
  ipv6net:
    name: ipv6net
    external: true

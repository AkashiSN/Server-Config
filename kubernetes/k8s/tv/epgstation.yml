apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: epgstation
  name: epgstation
  namespace: tv
spec:
  replicas: 1
  serviceName: epgstation
  selector:
    matchLabels:
      app: epgstation
  template:
    metadata:
      labels:
        app: epgstation
    spec:
      nodeSelector:
        kubernetes.io/hostname: worker-node-01
      securityContext:
        fsGroup: 33
        fsGroupChangePolicy: OnRootMismatch
      initContainers:
        - name: envsubst
          image: ghcr.io/akashisn/envsubst@sha256:32cb715670b2f497233819b0e5448d355ddcc1de4dd893ba92c186d33bcd9a7f
          imagePullPolicy: IfNotPresent
          command: [/init.sh]
          env:
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: epgstation-secrets
                  key: epgstation_mariadb_user_password
          volumeMounts:
            - name: hooks
              mountPath: /init.sh
              subPath: init.sh
              readOnly: true
            - name: template
              mountPath: /template
              readOnly: true
            - name: config
              mountPath: /config
      containers:
        - name: epgstation
          image: ghcr.io/akashisn/epgstation@sha256:fad47f3f5880c5cd5ad5e8103c51839b0b36e66ca0e3d531f31795012def77b0
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
          ports:
            - containerPort: 8888
              name: epgstation
          env:
            - name: TZ
              value: Asia/Tokyo
            - name: HOME
              value: /app
          volumeMounts:
            - name: recorded
              mountPath: /app/recorded
              readOnly: false
            - name: dri
              mountPath: /dev/dri
            - name: config
              mountPath: /app/config
              readOnly: true
          resources:
            requests:
              cpu: 500m
              memory: 500Mi
            limits:
              cpu: 3000m
              memory: 3000Mi
      volumes:
        - name: template
          configMap:
            name: epgstation-conf
        - name: hooks
          configMap:
            defaultMode: 504
            name: epgstation-hooks
        - name: config
          emptyDir: {}
        - name: dri
          hostPath:
            path: /dev/dri
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Delete
  volumeClaimTemplates:
    - metadata:
        name: recorded
      spec:
        accessModes:
          - ReadWriteOncePod
        storageClassName: nfs-hdd-storage
        resources:
          requests:
            storage: 8Ti
---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: epgstation
  name: epgstation
  namespace: tv
spec:
  ports:
    - name: epgstation
      port: 8888
      targetPort: epgstation
  selector:
    app: epgstation
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-epgstation
  namespace: tv
  annotations:
    nginx.ingress.kubernetes.io/auth-url: https://auth.akashisn.info/oauth2/auth
    nginx.ingress.kubernetes.io/auth-signin: https://auth.akashisn.info/oauth2/start?rd=https://tv.akashisn.info$escaped_request_uri
    cert-manager.io/cluster-issuer: letsencrypt-cluster-issuer
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - tv.akashisn.info
      secretName: epgstation-cert
  rules:
    - host: tv.akashisn.info
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: epgstation
                port:
                  name: epgstation
